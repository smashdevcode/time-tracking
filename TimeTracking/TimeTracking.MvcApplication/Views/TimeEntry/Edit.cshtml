@model TimeTracking.MvcApplication.ViewModels.TimeEntryAddViewModel
@using Newtonsoft.Json

@{
    ViewBag.Title = "Edit Time Entry";
}

@using (Html.BeginForm()) {
	@Html.ValidationSummary(true)

    <fieldset>
        <legend>Time Entry Information</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProjectId)
        </div>
        <div class="editor-field">
			@Html.DropDownListFor(model => model.ProjectId, Model.ProjectItems, 
				new { onchange = "GetProjectTasks();" })
            @Html.ValidationMessageFor(model => model.ProjectId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProjectTaskId)
        </div>
        <div class="editor-field">
			@Html.HiddenFor(model => model.ProjectTaskId, 
				new { data_bind = "value: selectedProjectTaskId"})
@*			@Html.DropDownListFor(model => model.ProjectTaskId, Model.ProjectTaskItems, new { data_bind = "options: projectTasks, optionsText: 'Name', optionsValue: 'ProjectTaskId', enable: projectTasks().length > 1, value: selectedProjectTaskId" })*@
            <select data-bind="
				options: projectTasks, 
				optionsText: 'Name', 
				optionsValue: 'ProjectTaskId', 
				enable: projectTasks().length > 1, 
				value: selectedProjectTaskId
			"></select>
			@Html.ValidationMessageFor(model => model.ProjectTaskId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Billable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Billable)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TimeInDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeInDate)
            @Html.EditorFor(model => model.TimeInTime)
            @Html.ValidationMessageFor(model => model.TimeInDate)
            @Html.ValidationMessageFor(model => model.TimeInTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TimeOutDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeOutDate)
            @Html.EditorFor(model => model.TimeOutTime)
            @Html.ValidationMessageFor(model => model.TimeOutDate)
            @Html.ValidationMessageFor(model => model.TimeOutTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <p>
            <input type="submit" value="Save" />
			<a href="#" id="DeleteTimeEntry">Delete</a>
			@Html.HiddenFor(model => model.TimeEntryId)
        </p>

    </fieldset>
}

@using (Html.BeginForm("Delete", "TimeEntry", FormMethod.Post, new { id = "DeleteTimeEntryForm" })) {
	@Html.HiddenFor(model => model.TimeEntryId)
}

<div>
    @Html.ActionLink("Back to Home", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@*	@Scripts.Render("~/Scripts/timeentry-add.js")*@

<script type="text/javascript">

	var viewModel = {
		projectTasks : ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(Model.ProjectTasks))),
		selectedProjectTaskId : ko.observable(@Model.ProjectTaskId)
	};

	function GetProjectTasks() {
		var projectId = $("#ProjectId").val();
		$.getJSON("/TimeEntry/GetProjectTasks/" + projectId, null, function (data) {
			viewModel.projectTasks(data);
		});
	}

	$(document).ready(function () {
		ko.applyBindings(viewModel);

		// TODO switch to this approach with handling a change in value in ProjectId???

		//viewModel.selectedProjectTaskId.subscribe(function (newSourceMaterialType) {
		//	$.getJSON("/IngredientType/FindByMaterialType",
		//			  { "id": newSourceMaterialType })
		//		.success(function (data) {
		//			viewModel.ingredientTypes($.parseJSON(data));
		//		})
		//		.error(function () { alert("error"); });
		//});

		$("#DeleteTimeEntry").click(function () {
			if (confirm("Are you sure you want to delete this time entry?")) {
				$("#DeleteTimeEntryForm").submit();
			}
		});
	});

</script>

}
