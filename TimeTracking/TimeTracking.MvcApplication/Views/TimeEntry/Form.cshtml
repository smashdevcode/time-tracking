@model TimeTracking.MvcApplication.ViewModels.TimeEntryViewModel
@using TimeTracking.MvcApplication.ViewModels

@using (Html.BootstrapBeginForm(FormMethod.Post, BootstrapFormType.Horizontal))
{
	@Html.ValidationSummary(true)

	using (Html.BootstrapBeginFormGroup(model => model.ProjectId,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
		@Html.DropDownListFor(model => model.ProjectId, Model.ProjectItems,
			new { data_bind = "value: selectedProjectId", @class = "form-control" })
	}

	using (Html.BootstrapBeginFormGroup(model => model.ProjectTaskId,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
		@Html.HiddenFor(model => model.ProjectTaskId,
			new { data_bind = "value: selectedProjectTaskId" })
        <select data-bind="
			options: projectTasks, 
			optionsText: 'Name', 
			optionsValue: 'ProjectTaskId', 
			enable: projectTasks() != null && projectTasks().length > 1, 
			value: selectedProjectTaskId
		" class="form-control"></select>
	}

	using (Html.BootstrapBeginFormGroup(model => model.Billable,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
		<div class="checkbox">
			@Html.CheckBoxFor(model => model.Billable,
				new { data_bind = "checked: isBillable" })
		</div>
	}
	 
	using (Html.BootstrapBeginFormGroup(model => model.TimeInDate,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
		<div class="row">
			<div class="col-xs-6 col-sm-3">
		        @Html.TextBoxFor(model => model.TimeInDate, new { @class = "form-control" })
			</div>
			<div class="col-xs-6 col-sm-3" style="padding-left: 0">
		        @Html.TextBoxFor(model => model.TimeInTime, new { @class = "form-control" })
			</div>
		</div>
	}

	using (Html.BootstrapBeginFormGroup(model => model.TimeOutDate,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
		<div class="row">
			<div class="col-xs-6 col-sm-3">
		        @Html.TextBoxFor(model => model.TimeOutDate, new { @class = "form-control" })
			</div>
			<div class="col-xs-6 col-sm-3" style="padding-left: 0">
		        @Html.TextBoxFor(model => model.TimeOutTime, new { @class = "form-control" })
			</div>
		</div>
	}

	using (Html.BootstrapBeginFormGroup(model => model.Comment,
		BootstrapGridColumn.Small2, BootstrapGridColumn.Small10))
	{
        @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", rows = "8" })
	}

    <div class="form-group">
		<div class="col-sm-offset-2 col-sm-10">

		@switch (Model.Mode)
  {
	  case ViewModelBase.ViewMode.Add:
					@Html.BootstrapButton("Add", glyphiconType: BootstrapGlyphiconType.Plus, 
						buttonStyle: BootstrapButtonStyle.Primary, buttonSize: BootstrapButtonSize.Large)
		  break;
	  case ViewModelBase.ViewMode.Edit:
					@Html.BootstrapButton("Save", glyphiconType: BootstrapGlyphiconType.Save,
						buttonStyle: BootstrapButtonStyle.Primary, buttonSize: BootstrapButtonSize.Large)
					@Html.BootstrapLinkButton("Delete", null, null, "DeleteTimeEntry",
						BootstrapGlyphiconType.Trash, buttonStyle: BootstrapButtonStyle.Danger, buttonSize: BootstrapButtonSize.Large)
	  				@Html.HiddenFor(model => model.TimeEntryId)
		  break;
  }

			@Html.BootstrapLinkButton("Back to Home", "Index", "Home",
			   glyphiconType: BootstrapGlyphiconType.Home, buttonStyle: BootstrapButtonStyle.Warning, buttonSize: BootstrapButtonSize.Large)
		</div>
	</div>

	@Html.HiddenFor(model => model.ProjectTasksJson)
	@Html.HiddenFor(model => model.Mode)
}

@if (Model.Mode == ViewModelBase.ViewMode.Edit)
{
	using (Html.BeginForm("Delete", "TimeEntry", FormMethod.Post, new { id = "DeleteTimeEntryForm" }))
	{
		@Html.HiddenFor(model => model.TimeEntryId);
	}


	
	
		
	<button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
	  Launch demo modal
	</button>	
		
	<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	  <div class="modal-dialog">
		<div class="modal-content">
		  <div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
			<h4 class="modal-title" id="myModalLabel">Modal title</h4>
		  </div>
		  <div class="modal-body">
			...
		  </div>
		  <div class="modal-footer">
			<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			<button type="button" class="btn btn-primary">Save changes</button>
		  </div>
		</div><!-- /.modal-content -->
	  </div><!-- /.modal-dialog -->
	</div><!-- /.modal -->	
	
	
}
